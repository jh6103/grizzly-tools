#!/usr/bin/env python

from ostools import *
import argparse
import json
import sys

openstack = OSTools('ostools.cfg')


def get_args():
    """Get command-line options"""
    parser = argparse.ArgumentParser(prog = "email_list",
                description = "Lookup email addresses",
                epilog = "Select only ONE search parameter. [cnode|project_id]")
    parser.add_argument("-c", "--cnode",
                        help="Short name of the compute node.")
    parser.add_argument("-p", "--project_id",
                        help="The project/tenant ID.")
    parser.add_argument("-s", "--semicolon",
                        help="Output semicolon separated list.",
                        action="store_true")
    parser.add_argument("-q", "--quiet",
                        help="Supress header", action="store_true")

    args = parser.parse_args()

    if not args.cnode and not args.project_id:
        print("You must select a search parameter!")
        parser.print_help()
        sys.exit(1)

    return args

def emails(userlist):
    emails = []
    for user in userlist:
        extra = json.loads(user['extra'])
        emails.append(extra['email'])

    return emails


def main():
    args = get_args()

    if args.cnode:
        vmlist = openstack.vm_list('host', args.cnode)

        if not vmlist:
            print("No VM's found!")
            sys.exit(1)

        for vm in vmlist:
            project = openstack.project_info("id", vm['project_id'])
            users = openstack.project_members(vm['project_id'])

            if not args.quiet:
                print("%s [%s%s%s]" % (vm['project_id'], red, project['name'], nrm))

            if args.semicolon:
                print(";".join(emails(users)))
            else:
                print("\n".join(emails(users)))

            print

    if args.project_id:
        project = openstack.project_info("id", args.project_id)

        if not project:
            print("Invalid project ID!")
            sys.exit(1)

        users = openstack.project_members(args.project_id)

        if not args.quiet:
            print("%s [%s%s%s]" % (args.project_id, red, project['name'], nrm))

        if args.semicolon:
            print(";".join(emails(users)))
        else:
            print("\n".join(emails(users)))

    


if __name__ == '__main__':
    main()
